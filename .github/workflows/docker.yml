name: Docker Build & Push
on:
  push:
    branches:
      - master
    paths-ignore:
      - .gitignore
      - docker-compose.yml
      - epglv-logo.svg
      - Jenkinsfile
      - README.md
  workflow_dispatch:
    inputs:
      tags:
        description: 'Scenario tags'
        type: choice
        options:
          - test
          - bld_all
          - bld_alpine
          - bld_official
        required: true
      trigger:
        type: string
jobs:
  docker:
    if: ${{ github.event.inputs.tags != 'test' }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Commit Hash
        id: c_hash
        uses: prompt/actions-commit-hash@v3
      - name: Build Arguments
        id: get_arg
        run: |
          printf 'dateTime=%(%Y-%m-%dT%H:%M:%S%z)T\n' >> $GITHUB_OUTPUT
          printf 'imageRevision=%s\n' "${{ steps.c_hash.outputs.short }}" >> $GITHUB_OUTPUT
          printf 'ALPINEbaseDIGEST=%s\n' "$(docker image pull ${{ env.ALPINEbaseIMAGE }}:${{ env.ALPINEbaseTAG }} | grep -i digest | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          printf 'OFFICIALbaseDIGEST=%s\n' "$(docker image pull ${{ env.OFFICIALbaseIMAGE }}:${{ env.OFFICIALbaseTAG }} | grep -i digest | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          printf 'ALPINEmariadbVersion=%s\n' "$(docker run --rm ${{ env.ALPINEbaseIMAGE }}:${{ env.ALPINEbaseTAG }} sh -c "apk update --quiet && apk info mariadb | head -n 1 | cut -d '-' -f 2 | tr -d '\n'")" >> $GITHUB_OUTPUT
          printf 'OFFICIALmariadbVersion=%s\n' "$(docker run --rm ${{ env.OFFICIALbaseIMAGE }}:${{ env.OFFICIALbaseTAG }} sh -c "mariadbd --version | cut -d ' ' -f4 | cut -d '-' -f 1")" >> $GITHUB_OUTPUT
      - name: Info
        run: |
          printf '<<<<<<<<< BUILD ARGUMENTS >>>>>>>>>\n'
          printf 'Build Timestamp:\t%s\n' "${{ steps.get_arg.outputs.dateTime }}"
          printf 'MariaDB Version:\tAlpine image (%s) / MariaDB image (%s)\n' "${{ steps.get_arg.outputs.ALPINEmariadbVersion }}" "${{ steps.get_arg.outputs.OFFICIALmariadbVersion }}"
          printf 'Image Revision:\t\t%s\n' "${{ steps.get_arg.outputs.imageRevision }}"
          printf 'Alpine Base Digest:\t%s\n' "${{ steps.get_arg.outputs.ALPINEbaseDIGEST }}"
          printf 'MariaDB Base Digest:\t%s\n' "${{ steps.get_arg.outputs.OFFICIALbaseDIGEST }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push - ALPINE
        if: ${{ (github.event.inputs.tags == 'bld_alpine') || (github.event.inputs.tags == 'bld_all') }}
        uses: docker/build-push-action@v6
        with:
          build-args: |
            baseDIGEST=${{ steps.get_arg.outputs.ALPINEbaseDIGEST }}
            baseIMAGE=${{ env.ALPINEbaseIMAGE }}
            baseTAG=${{ env.ALPINEbaseTAG }}
            dateTime=${{ steps.get_arg.outputs.dateTime }}
            imageRevision=${{ steps.get_arg.outputs.imageRevision }}
            mariadbVersion=${{ steps.get_arg.outputs.ALPINEmariadbVersion }}
          no-cache: true
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.imageNAME }}:alpine
            ghcr.io/${{ github.repository }}:alpine
      - name: Build and push - OFFICIAL
        if: ${{ (github.event.inputs.tags == 'bld_official') || (github.event.inputs.tags == 'bld_all') }}
        uses: docker/build-push-action@v6
        with:
          build-args: |
            baseDIGEST=${{ steps.get_arg.outputs.OFFICIALbaseDIGEST }}
            baseIMAGE=${{ env.OFFICIALbaseIMAGE }}
            baseTAG=${{ env.OFFICIALbaseTAG }}
            dateTime=${{ steps.get_arg.outputs.dateTime }}
            imageRevision=${{ steps.get_arg.outputs.imageRevision }}
            mariadbVersion=${{ steps.get_arg.outputs.OFFICIALmariadbVersion }}
          no-cache: true
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.imageNAME }}:${{ env.latestTAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.imageNAME }}:official
            ghcr.io/${{ github.repository }}:${{ env.latestTAG }}
            ghcr.io/${{ github.repository }}:official
      - name: Send mail
        if: github.event_name == 'workflow_dispatch'
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.GMAIL_USER}}
          password: ${{secrets.GMAIL_PASS}}
          from: GitHub
          to: ${{secrets.EMAIL}}
          subject: "Action ${{job.status}}: ${{github.repository}} - ${{github.workflow}} #${{github.run_id}}"
          body: |
            ${{job.status}}
            Action "${{github.workflow}}" started by ${{github.actor}} (${{ github.event.inputs.trigger }}) in ${{github.repository}}.
            View workflow run: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
            Your faithful employee
            ${{runner.name}} (${{runner.os}} - ${{runner.arch}})
          html_body: |
            <!DOCTYPE html>
            <html>
            <body>
            <h1 style="text-transform:uppercase">${{job.status}}</h1>
            <p>Action "${{github.workflow}}" started by ${{github.actor}} (${{ github.event.inputs.trigger }}) in ${{github.repository}}.</p>
            <p><a href="${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}" target="_blank" style="background-color:#4CAF50; border:none; color:white; padding:20px; text-align:center; text-decoration:none; display:inline-block; font-size:16px; margin:4px 2px; cursor:pointer; border-radius:12px;">View workflow run</a></p>
            <p>Your faithful employee<br>
            ${{runner.name}} (${{runner.os}} - ${{runner.arch}})</p>
            </body>
            </html>
          priority: low
    env:
      imageNAME: mariadb-epglv
      latestTAG: latest
      ALPINEbaseIMAGE: alpine
      ALPINEbaseTAG: latest
      OFFICIALbaseIMAGE: mariadb
      OFFICIALbaseTAG: latest
